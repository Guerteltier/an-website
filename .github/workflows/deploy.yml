name: Deploy stuff
on:
  push:
    branches: [ main ]
concurrency:
  group: deploy
  cancel-in-progress: true
env:
  PIP_DISABLE_PIP_VERSION_CHECK: yes

jobs:

  tests:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install libcurl4-openssl-dev for compiling PycURL
        run: sudo apt-get install -y libcurl4-openssl-dev
      - name: Install requirements
        run: pip install -r requirements.txt
      - name: Install pytest, coverage and html5lib (needed for the tests)
        run: grep -E "^(pytest|coverage|html5lib)" requirements-dev.txt | xargs pip install
      - name: Run pytest
        run: pytest --cov=an_website tests
      - name: Upload coverage as artifact
        uses: actions/upload-artifact@v3
        with:
          path: .coverage
          name: coverage

  hashes:
    name: Hash files
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Hash files
        run: ./hash_files.py > hashes
      - name: Upload as build artifact
        uses: actions/upload-artifact@v3
        with:
          path: hashes
          name: hashes

  gh_pages:
    name: Push hashes and coverage to GitHub Pages
    runs-on: ubuntu-latest
    needs:
      - tests
      - hashes
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Download artifacts
        uses: actions/download-artifact@v3
      - name: Move files
        run: |
          mkdir public
          mv hashes/hashes public
          mv coverage/.coverage .
      - name: Create coverage files
        run: |
          grep "^coverage" requirements-dev.txt | xargs pip install
          coverage html -d "public/coverage"
          coverage json -o "public/coverage.json"
          set -x
          # get the total coverage percentage and round it to 2 decimals
          total="$(jq '.totals.percent_covered' public/coverage.json | awk '{ printf( "%3.2f\n", $1 ) }')"
          if (( $(echo "$total <= 50" | bc -l) )) ; then
            COLOR=red
          elif (( $(echo "$total > 80" | bc -l) )); then
            COLOR=green
          else
            COLOR=orange
          fi
          curl "https://img.shields.io/badge/coverage-$total%25-$COLOR" > public/coverage/badge.svg
          rm public/coverage/.gitignore
      - name: Push hashes and coverage to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force_orphan: true
          commit_message: ${{ github.event.head_commit.message }}

  deploy:
    name: Deploy website
    runs-on: ubuntu-latest
    needs:
      - tests
    steps:
      - name: Deploy website
        run: |
          POST -f -H "Authorization: ${{ secrets.API_RESTART_SECRET }}" \
            https://asozial.org/api/restart?commit=${{ github.event.head_commit.id }}
