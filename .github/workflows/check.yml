name: Check
on: [push, pull_request, pull_request_target]

jobs:
  check_formatting:
    name: Check formatting
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - name: Install Black and isort
        run: |
          pip install --user black "isort<6"
      - name: Run Black
        run: |
          black -t py38 .
      - name: Run isort
        run: |
          isort .
      - name: Push changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: fix formatting
  check_types:
    name: Check types
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Cache type information
        uses: pat-s/always-upload-cache@v2
        with:
          path: .mypy_cache
          key: mypy-${{ github.sha }}
          restore-keys: mypy-
      - name: Install requirements
        run: |
          cat requirements.txt | grep -v "\#*" | grep -v "pycurl*" | xargs pip install --user
      - name: Install mypy
        run: |
          pip install --user "mypy<2"
      - name: Run mypy
        run: |
          mypy --show-column-numbers --show-error-codes -p an_website
  lint:
    name: Lint
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Cache collected data
        uses: pat-s/always-upload-cache@v2
        with:
          path: ~/.pylint.d
          key: pylint-${{ github.sha }}
          restore-keys: pylint-
      - name: Install requirements
        run: |
          cat requirements.txt | grep -v "\#*" | grep -v "pycurl*" | xargs pip install --user
      - name: Install Pylint
        run: |
          pip install --user "pylint<3"
      - name: Run Pylint
        run: |
          pylint -d R,line-too-long an_website
