name: Check stuff
on: [ push, pull_request ]
env:
  PIP_DISABLE_PIP_VERSION_CHECK: yes

jobs:

  fix_stupid_mistakes:
    name: Fix stupid mistakes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: requirements*.txt
      - name: Install required stuff
        run: grep -E "^(autoflake|black|isort|rjsmin|rcssmin)" requirements-dev.txt | xargs pip install
      - name: Run autoflake
        run: autoflake --recursive --in-place --remove-all-unused-imports --remove-duplicate-keys --remove-unused-variables .
      - name: Run isort
        run: |
          isort .
      - name: Run Black
        run: black .
      - name: Minify JS files
        run: ./minify_js.py --clean
      - name: Minify CSS files
        run: ./minify_css.py --clean
      - name: Push changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "ðŸ¤¦"

  check_types:
    name: Check types
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: requirements*.txt
      - name: Cache type information
        uses: pat-s/always-upload-cache@v2
        with:
          path: .mypy_cache
          key: mypy-${{ github.repository }}-${{ github.ref }}-${{ github.sha }}
          restore-keys: mypy-${{ github.repository }}-${{ github.ref }}-
      - name: Install libcurl4-openssl-dev for compiling PycURL
        run: sudo apt-get install -y libcurl4-openssl-dev
      - name: Install requirements
        run: pip install -r requirements.txt
      - name: Install mypy + stuff required for checking the tests
        run: grep -E "^(mypy|types-|pytest|html5lib)" requirements-dev.txt | xargs pip install
      - name: Run mypy
        run: mypy -p an_website -p tests

  flake8:
    name: Flake8
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: requirements*.txt
      - name: Install libcurl4-openssl-dev for compiling PycURL
        run: sudo apt-get install -y libcurl4-openssl-dev
      - name: Install requirements
        run: pip install -r requirements.txt
      - name: Install Flake8 + stuff required for checking the tests
        run: grep -E "^(flake8|pep8-naming|pytest|html5lib)" requirements-dev.txt | xargs pip install
      - name: Run Flake8
        run: flake8 --extend-ignore=D100,D102 *.py an_website tests

  pylint:
    name: Pylint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
          cache: "pip"
          cache-dependency-path: requirements*.txt
      - name: Cache collected data
        uses: pat-s/always-upload-cache@v2
        with:
          path: ~/.cache/pylint
          key: pylint-${{ github.repository }}-${{ github.ref }}-${{ github.sha }}
          restore-keys: pylint-${{ github.repository }}-${{ github.ref }}-
      - name: Install libcurl4-openssl-dev for compiling PycURL
        run: sudo apt-get install -y libcurl4-openssl-dev
      - name: Install requirements
        run: pip install -r requirements.txt
      - name: Install Pylint + stuff required for checking
        run: grep -E "^(pylint|pytest|html5lib|rcssmin|rjsmin)" requirements-dev.txt | xargs pip install
      - name: Run Pylint
        run: pylint -d fixme *.py an_website tests
