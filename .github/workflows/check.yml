name: Check
on:
  push:
    paths:
      - "tests/**"
      - "an_website/**"
      - ".github/workflows/check.yml"
      - "requirements.txt"
      - "pyproject.toml"
      - ".mypy.ini"
      - ".pylintrc"
      - "minify_js.py"
      - "minify_css.py"
  pull_request:
    paths:
      - "tests/**"
      - "an_website/**"
      - ".github/workflows/check.yml"
      - "requirements.txt"
      - "pyproject.toml"
      - ".mypy.ini"
      - ".pylintrc"
      - "minify_js.py"
      - "minify_css.py"

jobs:

  fix_stupid_mistakes:
    name: Fix stupid mistakes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          ref: ${{ github.head_ref }}
      - name: Install required stuff
        run: grep -E "^(autoflake|black|isort|rjsmin|rcssmin)" requirements-dev.txt | xargs pip install --prefer-binary
      - name: Run autoflake
        run: autoflake --recursive --in-place --remove-all-unused-imports --remove-duplicate-keys --remove-unused-variables .
      - name: Run isort
        run: isort .
      - name: Run Black
        run: black .
      - name: Minify JS files
        run: ./minify_js.py --clean
      - name: Minify CSS files
        run: ./minify_css.py --clean
      - name: Push changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "ðŸ¤¦"

  check_types:
    name: Check types
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Cache type information
        uses: pat-s/always-upload-cache@v2
        with:
          path: .mypy_cache
          key: mypy-${{ github.repository }}-${{ github.ref }}-${{ github.sha }}
          restore-keys: mypy-${{ github.repository }}-${{ github.ref }}-
      - name: Install libcurl4-openssl-dev for compiling PycURL
        run: sudo apt-get install -y libcurl4-openssl-dev
      - name: Install requirements
        run: grep -E -v "^(#|pip)" requirements.txt | xargs pip install --prefer-binary
      - name: Install mypy
        run: grep "^mypy" requirements-dev.txt | xargs pip install --prefer-binary
      - name: Install types in check-requrements.txt
        run: grep "^types-" requirements-dev.txt | xargs pip install --prefer-binary
      - name: Run mypy
        run: mypy --no-warn-unused-ignores --no-warn-redundant-casts -p an_website

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Cache collected data
        uses: pat-s/always-upload-cache@v2
        with:
          path: ~/.cache/pylint
          key: pylint-${{ github.repository }}-${{ github.ref }}-${{ github.sha }}
          restore-keys: pylint-${{ github.repository }}-${{ github.ref }}-
      - name: Install libcurl4-openssl-dev for compiling PycURL
        run: sudo apt-get install -y libcurl4-openssl-dev
      - name: Install requirements
        run: grep -E -v "^(#|pip)" requirements.txt | xargs pip install --prefer-binary
      - name: Install Flake8 and Pylint
        run: grep -E "^(flake8|pep8-naming|pylint|pytest)" requirements-dev.txt | xargs pip install --prefer-binary
      - name: Run Flake8
        run: flake8 --extend-ignore=D100,D102 an_website tests
      - name: Run Pylint
        run: pylint -d fixme an_website tests
